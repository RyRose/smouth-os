package(default_visibility = ["//visibility:public"])

cc_library(
    name = "status",
    srcs = [
        "status.cc",
    ],
    hdrs = [
        "status.h",
    ],
    deps = [
        ":either",
        ":overload_macros",
    ],
)

cc_test(
    name = "status_test",
    size = "small",
    srcs = [
        "status_test.cc",
    ],
    deps = [
        ":status",
        "//testing:assert",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_library(
    name = "ret_checkf",
    hdrs = [
        "ret_checkf.h",
    ],
    deps = [
        ":overload_macros",
        ":status",
        "//libc:stdio",
    ],
)

cc_test(
    name = "ret_checkf_test",
    size = "small",
    srcs = [
        "ret_checkf_test.cc",
    ],
    deps = [
        ":ret_checkf",
        "//testing:assert",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_library(
    name = "either",
    hdrs = [
        "either.h",
    ],
)

cc_library(
    name = "optional",
    hdrs = [
        "optional.h",
    ],
    deps = [
        "//cxx:new",
    ],
)

cc_test(
    name = "either_test",
    size = "small",
    srcs = [
        "either_test.cc",
    ],
    deps = [
        ":either",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_library(
    name = "list",
    hdrs = [
        "list.h",
    ],
    deps = [
        "//libc:string",
        "//util:status",
    ],
)

cc_test(
    name = "list_test",
    srcs = [
        "list_test.cc",
    ],
    deps = [
        ":list",
        "//testing:assert",
        "@gtest",
        "@gtest//:gtest_main",
    ],
)

cc_library(
    name = "check",
    hdrs = [
        "check.h",
    ],
    deps = [
        ":overload_macros",
        "//libc:stdlib",
        "//util:status",
    ],
)

cc_library(
    name = "overload_macros",
    hdrs = [
        "overload_macros.h",
    ],
    deps = [
    ],
)
