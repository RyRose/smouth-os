name: continuous-testing
on:
  push:
  pull_request:
  schedule:
    - cron: '0 0 * * *'

env:
  BAZEL_VERSION: 6.5.0
  CC: gcc-11
  CXX: g++-11

jobs:
  run-bazel:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - action: test
            config: ci
            os: ubuntu-latest
            bazel_os_name: linux
            cache: true
            packages: [build-essential]
            install_qemu: false
          - action: test
            config: i386-linux-premade
            os: ubuntu-latest
            bazel_os_name: linux
            cache: true
            packages: [build-essential]
            install_qemu: true
          - action: test
            config: i386
            os: ubuntu-latest
            bazel_os_name: linux
            cache: true
            packages: [bison, build-essential, flex, libgmp3-dev, libmpc-dev, libmpfr-dev, texinfo]
            install_qemu: true
          - action: test
            config: ci
            os: macos-latest
            bazel_os_name: darwin
            cache: true
            packages: []
            install_qemu: false
          - action: test
            config: i386-darwin-premade
            os: macos-latest
            bazel_os_name: darwin
            cache: true
            packages: [qemu]
            install_qemu: false
          - action: test
            config: i386
            os: macos-latest
            bazel_os_name: darwin
            cache: true
            packages: [qemu, bison, flex, gcc@11, gmp, libmpc, mpfr, texinfo]
            install_qemu: false
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Docker Setup QEMU
        if: ${{ matrix.install_qemu }}
        uses: docker/setup-qemu-action@v3.0.0
      - name: Install required Linux packages.
        if: ${{ runner.os == 'Linux' && matrix.packages[0] != null }}
        run: sudo apt-get install -y ${{ join(matrix.packages, ' ') }}
      - name: Install required macOS packages.
        if: ${{ runner.os == 'macOS' && matrix.packages[0] != null }}
        run: brew install ${{ join(matrix.packages, ' ') }}
      - name: Cache Bazel outputs
        if: ${{ matrix.cache }}
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/bazel/output
            ~/.bazel_repository_cache
          key: bazel-cache-${{ matrix.config }}-${{ runner.os }}
      - name: Install Bazel
        run: ${{ github.workspace }}/tools/scripts/install_bazel.sh "${{ env.BAZEL_VERSION }}" "${{ matrix.bazel_os_name }}"
      - name: Run Bazel
        run: ${{ github.workspace }}/tools/scripts/run_bazel.sh "${{ matrix.action }}" "${{ matrix.config }}" "${{ matrix.cache }}"
      - name: Upload command.log on failure
        if: ${{ failure() }}
        uses: 'actions/upload-artifact@v2'
        with:
          name: command.log
          path: ${{ github.workspace }}/command.log
      - name: Upload test.log on failure
        if: ${{ failure() }}
        uses: 'actions/upload-artifact@v2'
        with:
          name: test logs
          path: ${{ github.workspace }}/bazel-testlogs/**/test.log

