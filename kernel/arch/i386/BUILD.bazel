package(
    default_visibility = ["//kernel/arch:__pkg__"],
)

exports_files(["linker.ld"])

genrule(
    name = "crti",
    srcs = [
        "crti.S",
    ],
    outs = [
        "crti.o",
    ],
    cmd = "$(CC) $(CC_FLAGS) -c $< -o $@",
    tags = ["i386-only"],
    toolchains = [
        "@bazel_tools//tools/cpp:current_cc_toolchain",
        "@bazel_tools//tools/cpp:cc_flags",
    ],
)

genrule(
    name = "crtn",
    srcs = [
        "crtn.S",
    ],
    outs = [
        "crtn.o",
    ],
    cmd = "$(CC) $(CC_FLAGS) -c $< -o $@",
    tags = ["i386-only"],
    toolchains = [
        "@bazel_tools//tools/cpp:current_cc_toolchain",
        "@bazel_tools//tools/cpp:cc_flags",
    ],
)

cc_library(
    name = "init",
    srcs = [
        "init.cc",
    ],
    hdrs = [
        "//kernel/arch:init.h",
    ],
    tags = [
        "i386",
        "i386-only",
    ],
    visibility = ["//kernel/arch:__pkg__"],
    deps = [
        "//cxx:kernel",
        "//kernel/arch/common:memory",
        "//kernel/arch/common:tty",
        "//kernel/arch/i386/boot:boot-internal",
        "//kernel/arch/i386/boot:multiboot",
        "//kernel/arch/i386/gdt:flush",
        "//kernel/arch/i386/gdt:table",
        "//kernel/arch/i386/instructions",
        "//kernel/arch/i386/interrupt:macros",
        "//kernel/arch/i386/interrupt:table",
        "//kernel/arch/i386/io:serial",
        "//libc:kernel",
        "//libc:stdio",
        "//libc:string",
        "//util:check",
        "//util:optional",
        "//util:status",
    ],
)

cc_library(
    name = "boot",
    tags = [
        "i386",
        "i386-only",
    ],
    visibility = ["//kernel/arch:__pkg__"],
    deps = [
        "//kernel/arch/i386/boot",
    ],
)
