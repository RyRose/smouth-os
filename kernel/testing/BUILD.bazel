load("//kernel:templates.bzl", "kernel_test")

cc_library(
    name = "macros",
    hdrs = [
        "macros.h",
    ],
    visibility = ["//visibility:public"],
    deps = [
        "//libc:stdio",
        "//libc:stdlib",
        "//util:check",
        "//util:overload_macros",
        "//util:status",
    ],
)

kernel_test(
    name = "macros_ktest",
    srcs = [
        "macros_ktest.cc",
    ],
    deps = [
        ":macros",
    ],
)

kernel_test(
    name = "stack_smashing_protector_ktest",
    srcs = [
        "stack_smashing_protector_ktest.cc",
    ],
    binary_copts = [
        # Ensure stack smashing is enabled for function.
        "-fstack-protector-all",
    ],
    # Instead of checking for end of the ktest, we instead check for stack smashing detection.
    magic_string = "Stack smashing detected",
    deps = [
        "//kernel/arch:init",
        "//kernel/testing:macros",
    ],
)
